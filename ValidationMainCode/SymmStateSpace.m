function [responce, t_responce] = SymmStateSpace(hp0, V0, alpha0, th0, m, q0, time, input)
	run("Cit_par.m");
	Q = c/V0;
	C_1 = [-2*muc*Q,		0,				0,		0; ...
			  0,	(CZadot - 2*muc)*Q,		0,		0; ...
			  0,			0,				-Q,		0; ...
			  0,		Cmadot*Q,			0,  -2*muc*KY2*Q];

	C_2 = [-CXu,	   -CXa,		-CZ0,			0;		...
		   -CZu,	   -CZa,		CX0,	-(CZq + 2*muc); ...
			 0,		    0,		     0,			   -1;		...
		   -Cmu,	   -Cma,		 0,		      -Cmq];

	C_3 = [-CXde;	...
		   -CZde;	...
			0;		...
		   -Cmde];

	As = inv(C_1)*C_2;
	Bs = inv(C_1)*C_3;

	Cs = [V0, 0, 0, 0; ...
		   0, 1, 0, 0; ...
		   0, 0, 1, 0; ...
		   0, 0, 0, 1/Q];
	Ds = zeros(4, 1);
	sys_s = ss(As, Bs, Cs, Ds, 'OutputName', {'u' 'AOA' 'theta' 'pitch rate'}, 'InputName', 'Delta elevator');
	init = [0, 0, 0, 0];								% Initial Condition	
	[responce, t_responce] = lsim(sys_s, input, time, init);
	responce = responce + [V0, alpha0, th0, q0];
	eig(As)
end